<Application x:Class="TheManager_GUI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
			 xmlns:local="clr-namespace:TheManager_GUI"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

		<local:DataGridTournamentColumnConverter x:Key="DataGridTournamentColumnConverter"/>


		<Color x:Key="Color1">#20833c</Color> 
		<Color x:Key="Color2">#a4f17a</Color>
		<Color x:Key="ColorDate">#D3D3D3</Color>
		<Color x:Key="BackgroundColor">#1c262b</Color>
		<Color x:Key="Promotion">#075002</Color>
		<Color x:Key="UpperPlayOff">#5E7004</Color>
		<Color x:Key="BottomPlayOff">#CA040B</Color>
		<Color x:Key="Relegation">#7C0004</Color>
		<Color x:Key="CL1">#00478a</Color>
		<Color x:Key="CL2">#006cd1</Color>
		<Color x:Key="EL1">#785400</Color>
		<Color x:Key="EL2">#ab7800</Color>
		<Color x:Key="ECL1">#81008a</Color>

		<FontFamily x:Key="Font">Bahnschrift Light</FontFamily>
		<FontFamily x:Key="BoldFont">Bahnschrift SemiBold</FontFamily>
		<FontFamily x:Key="FontClassement">Bitstream Vera Sans</FontFamily>
		<sys:Double x:Key="TailleGrande">15</sys:Double>
		<sys:Double x:Key="TailleMoyenne">14</sys:Double>
		<sys:Double x:Key="TaillePetite">13</sys:Double>

		<SolidColorBrush x:Key="color1" Color="{DynamicResource Color1}" />
		<SolidColorBrush x:Key="color2" Color="{DynamicResource Color2}" />
		<SolidColorBrush x:Key="backgroundColor" Color="{DynamicResource BackgroundColor}"/>
		<SolidColorBrush x:Key="borderColor" Color="#1a1a1a"/>
		<SolidColorBrush x:Key="brushBackgroundStackPanel" Color="LightGray" Opacity="0.3" />
		<SolidColorBrush x:Key="brushBackgroundCalendar" Color="LightGray" Opacity="0.6" />
		<SolidColorBrush x:Key="brushBackgroundCalendarToday" Color="LightSalmon" Opacity="0.6" />

		<SolidColorBrush x:Key="cl1Color" Color="{DynamicResource CL1}"/>
		<SolidColorBrush x:Key="cl2Color" Color="{DynamicResource CL2}"/>
		<SolidColorBrush x:Key="el1Color" Color="{DynamicResource EL1}"/>
		<SolidColorBrush x:Key="el2Color" Color="{DynamicResource EL2}"/>
		<SolidColorBrush x:Key="ecl1Color" Color="{DynamicResource ECL1}"/>
		<SolidColorBrush x:Key="promotionColor" Color="{DynamicResource Promotion}"/>
		<SolidColorBrush x:Key="barrageColor" Color="{DynamicResource UpperPlayOff}"/>
		<SolidColorBrush x:Key="barrageRelegationColor" Color="{DynamicResource BottomPlayOff}"/>
		<SolidColorBrush x:Key="relegationColor" Color="{DynamicResource Relegation}"/>

		<SolidColorBrush x:Key="victoireColor" Color="#033e00"/>
		<SolidColorBrush x:Key="defaiteColor" Color="#3e1500"/>
		<SolidColorBrush x:Key="nulColor" Color="#813e00"/>

		<Style TargetType="{x:Type ScrollBar}">
			<Setter Property="Stylus.IsFlicksEnabled"
            Value="false" />
			<Setter Property="Foreground"
            Value="{DynamicResource color2}" />
			<Setter Property="Background"
            Value="Transparent" />
			<Setter Property="Width"
            Value="7" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ScrollBar}">
						<Grid x:Name="GridRoot"
                        Width="7"
                        Background="{TemplateBinding Background}">
							<Grid.RowDefinitions>
								<RowDefinition Height="0.00001*" />
							</Grid.RowDefinitions>
							<Track x:Name="PART_Track"
                            Grid.Row="0"
                            IsDirectionReversed="true"
                            Focusable="false">
								<Track.Thumb>
									<Thumb x:Name="Thumb"
                                    Background="{TemplateBinding Foreground}"
                                    Style="{DynamicResource ScrollBarTrackThumb}" />
								</Track.Thumb>
								<Track.IncreaseRepeatButton>
									<RepeatButton x:Name="PageUp"
                                            Command="ScrollBar.PageDownCommand"
                                            Opacity="0"
                                            Focusable="false" />
								</Track.IncreaseRepeatButton>
								<Track.DecreaseRepeatButton>
									<RepeatButton x:Name="PageDown"
                                            Command="ScrollBar.PageUpCommand"
                                            Opacity="0"
                                            Focusable="false" />
								</Track.DecreaseRepeatButton>
							</Track>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger SourceName="Thumb"
                                Property="IsMouseOver"
                                Value="true">
								<Setter Value="{DynamicResource ButtonSelectBrush}"
                                TargetName="Thumb"
                                Property="Background" />
							</Trigger>
							<Trigger SourceName="Thumb"
                                Property="IsDragging"
                                Value="true">
								<Setter Value="{DynamicResource DarkBrush}"
                                TargetName="Thumb"
                                Property="Background" />
							</Trigger>

							<Trigger Property="IsEnabled"
                                Value="false">
								<Setter TargetName="Thumb"
                                Property="Visibility"
                                Value="Collapsed" />
							</Trigger>
							<Trigger Property="Orientation"
                                Value="Horizontal">
								<Setter TargetName="GridRoot"
                                Property="LayoutTransform">
									<Setter.Value>
										<RotateTransform Angle="-90" />
									</Setter.Value>
								</Setter>
								<Setter TargetName="PART_Track"
                                Property="LayoutTransform">
									<Setter.Value>
										<RotateTransform Angle="-90" />
									</Setter.Value>
								</Setter>
								<Setter Property="Width"
                                Value="Auto" />
								<Setter Property="Height"
                                Value="8" />
								<Setter TargetName="Thumb"
                                Property="Tag"
                                Value="Horizontal" />
								<Setter TargetName="PageDown"
                                Property="Command"
                                Value="ScrollBar.PageLeftCommand" />
								<Setter TargetName="PageUp"
                                Property="Command"
                                Value="ScrollBar.PageRightCommand" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="ScrollBarTrackThumb"
        TargetType="{x:Type Thumb}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Thumb}">
						<Grid x:Name="Grid">
							<Rectangle HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Width="Auto"
                                Height="Auto"
                                Fill="Transparent" />
							<Border x:Name="CornerScrollBarRectangle"
                            CornerRadius="5"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Width="Auto"
                            Height="Auto"
                            Margin="0,1,0,1"
                            Background="{TemplateBinding Background}" />
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="Tag"
                                Value="Horizontal">
								<Setter TargetName="CornerScrollBarRectangle"
                                Property="Width"
                                Value="Auto" />
								<Setter TargetName="CornerScrollBarRectangle"
                                Property="Height"
                                Value="6" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		

		<Style x:Key="StyleBorderStackPanel" TargetType="{x:Type Border}">
			<Setter Property="Background" Value="{StaticResource brushBackgroundStackPanel}"/>
			<Setter Property="CornerRadius" Value="15"/>
			<Setter Property="Padding" Value="8"/>
		</Style>

		<Style x:Key="StyleBorderCalendar" TargetType="{x:Type Border}">
			<Setter Property="Background" Value="{StaticResource brushBackgroundCalendar}"/>
			<Setter Property="CornerRadius" Value="10"/>
			<Setter Property="Padding" Value="5"/>
		</Style>

		<Style x:Key="StyleBorderCalendarToday" BasedOn="{StaticResource StyleBorderCalendar}" TargetType="{x:Type Border}">
			<Setter Property="Background" Value="{StaticResource brushBackgroundCalendarToday}"/>
		</Style>

		<Style x:Key="StyleWindows" TargetType="{x:Type Window}">
			<Setter Property="WindowStyle" Value="None"/>
			<Setter Property="AllowsTransparency" Value="True"/>
			<Setter Property="ResizeMode" Value="NoResize"/>
			<Setter Property="Background" Value="{StaticResource backgroundColor}"/>
			<Setter Property="BorderBrush" Value="{StaticResource borderColor}"/>
			<Setter Property="BorderThickness" Value="3"/>
		</Style>

		<Style x:Key="StyleWindowsWithMap" TargetType="{x:Type Window}">
			<Setter Property="WindowStyle" Value="None"/>
			<Setter Property="ResizeMode" Value="NoResize"/>
			<Setter Property="Background" Value="{StaticResource backgroundColor}"/>
			<Setter Property="BorderBrush" Value="{StaticResource borderColor}"/>
			<Setter Property="BorderThickness" Value="3"/>
		</Style>

		<Style x:Key="StyleButton1" TargetType="{x:Type Button}">
			<Setter Property="Background" Value="{StaticResource color1}" />
			<Setter Property="Foreground" Value="#eeeeee" />
			<Setter Property="FontSize" Value="15"/>
			<Setter Property="FontFamily" Value="{DynamicResource Font}"/>
			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="True">
					<Setter Property="Background" Value="{StaticResource color2}"/>
				</Trigger>
			</Style.Triggers>
		</Style>

		<Style x:Key="StyleButtonLabel" TargetType="{x:Type Button}">
			<Setter Property="Background" Value="Transparent" />
			<Setter Property="Foreground" Value="{StaticResource color1}" />
			<Setter Property="FontSize" Value="18"/>
			<Setter Property="FontFamily" Value="{DynamicResource Font}"/>
			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="True">
					<Setter Property="FontWeight" Value="Bold"/>
				</Trigger>
			</Style.Triggers>
		</Style>

		<Style x:Key="StyleTextBox" TargetType="{x:Type TextBox}">
			<Setter Property="FontFamily" Value="{DynamicResource Font}"/>
			<Setter Property="Foreground" Value="{StaticResource color1}" />
			<Setter Property="Background" Value="{StaticResource color2}" />
		</Style>

		<Style x:Key="StyleDatePicker" TargetType="{x:Type DatePicker}">
			<Setter Property="FontFamily" Value="{DynamicResource Font}"/>
			<Setter Property="Foreground" Value="{StaticResource color1}" />
			<Setter Property="Background" Value="{StaticResource color2}" />
		</Style>


		<Style x:Key="StyleLabel1" TargetType="{x:Type Label}">
			<Setter Property="FontSize" Value="18"/>
			<Setter Property="FontFamily" Value="{DynamicResource Font}"/>
			<Setter Property="Foreground" Value="{StaticResource color1}" />
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
		</Style>

		<Style x:Key="StyleLabel2" TargetType="{x:Type Label}">
			<Setter Property="FontSize" Value="14"/>
			<Setter Property="FontFamily" Value="{DynamicResource Font}"/>
			<Setter Property="Foreground" Value="{StaticResource color2}" />
		</Style>

		<Style x:Key="StyleLabel2Center" TargetType="{x:Type Label}" BasedOn="{StaticResource StyleLabel2}">
			<Setter Property="HorizontalContentAlignment" Value="Center" />
		</Style>

		<Style x:Key="StyleLabel2Right" TargetType="{x:Type Label}" BasedOn="{StaticResource StyleLabel2}">
			<Setter Property="HorizontalContentAlignment" Value="Right" />
		</Style>

		<Style x:Key="StyleTextBlock" TargetType="{x:Type TextBlock}">
			<Setter Property="FontSize" Value="14"/>
			<Setter Property="FontFamily" Value="{DynamicResource Font}"/>
			<Setter Property="Foreground" Value="{StaticResource color2}" />
		</Style>

		<Style x:Key="StyleTextBlockLittle" TargetType="{x:Type TextBlock}">
			<Setter Property="FontSize" Value="12"/>
			<Setter Property="FontFamily" Value="{DynamicResource Font}"/>
			<Setter Property="Foreground" Value="{StaticResource color2}" />
		</Style>

		<Style x:Key="StyleCheckBox" TargetType="{x:Type CheckBox}">
			<Setter Property="FontSize" Value="13"/>
			<Setter Property="FontFamily" Value="{DynamicResource Font}"/>
			<Setter Property="FontStyle" Value="Italic"/>
			<Setter Property="Foreground" Value="{StaticResource color1}" />
		</Style>

		<Style x:Key="StyleRadioButton" TargetType="{x:Type RadioButton}">
			<Setter Property="FontSize" Value="13"/>
			<Setter Property="FontFamily" Value="{DynamicResource Font}"/>
			<Setter Property="FontStyle" Value="Italic"/>
			<Setter Property="Foreground" Value="{StaticResource color1}" />
		</Style>


		<Style x:Key="StyleListBox" TargetType="{x:Type ListBox}">
			<Setter Property="FontSize" Value="14"/>
			<Setter Property="FontFamily" Value="{DynamicResource Font}"/>
			<Setter Property="Background" Value="{StaticResource color1}" />
			<Setter Property="Foreground" Value="{StaticResource color2}" />
		</Style>

		<Style x:Key="StyleComboBox" TargetType="{x:Type ComboBox}">
			<Setter Property="FontSize" Value="14"/>
			<Setter Property="FontFamily" Value="{DynamicResource Font}"/>
			<Setter Property="Background" Value="{StaticResource backgroundColor}" />
			<Setter Property="Foreground" Value="{StaticResource color1}" />
		</Style>

		<Style TargetType="{x:Type ComboBoxItem}">
			<Setter Property="FontSize" Value="14"/>
			<Setter Property="FontFamily" Value="{DynamicResource Font}"/>
			<Setter Property="Background" Value="{StaticResource backgroundColor}" />
			<Setter Property="Foreground" Value="{StaticResource color2}" />
		</Style>

		<Style x:Key="StyleTreeView" TargetType="{x:Type TreeView}">
			<Setter Property="Background" Value="{StaticResource backgroundColor}"/>
		</Style>

		<Style x:Key="StyleTreeViewItem" TargetType="{x:Type TreeViewItem}">
			<Setter Property="FontSize" Value="11"/>
			<Setter Property="FontFamily" Value="{DynamicResource Font}"/>
			<Setter Property="Foreground" Value="{StaticResource color2}" />
		</Style>

		<Style x:Key="StyleDataGrid" TargetType="{x:Type DataGrid}">
			<Setter Property="FontFamily" Value="{DynamicResource Font}"/>
			<Setter Property="Background" Value="{StaticResource backgroundColor}" />
			<Setter Property="Foreground" Value="{StaticResource color2}" />
			<Setter Property="AlternationCount" Value="2" />
		</Style>

		<Style x:Key="StyleDataHeaderGrid" TargetType="{x:Type DataGridColumnHeader}">
			<Setter Property="FontSize" Value="13"/>
			<Setter Property="Height" Value="16"/>
			<Setter Property="Background" Value="{StaticResource backgroundColor}" />
			<Setter Property="Foreground" Value="{StaticResource color1}" />
		</Style>

		<Style x:Key="StyleDataCellGrid" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource {x:Type DataGridCell}}">
			<Setter Property="FontSize" Value="12"/>
			<Setter Property="Height" Value="16"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Background" Value="{StaticResource backgroundColor}" />
			<Setter Property="Foreground" Value="{StaticResource color2}" />
		</Style>

		<Style x:Key="StyleDataGridClassement" TargetType="{x:Type DataGrid}">
			<Setter Property="FontFamily" Value="{DynamicResource FontClassement}"/>
			<!--<Setter Property="Background" Value="{StaticResource backgroundColor}" />
			<Setter Property="Foreground" Value="{StaticResource color2}" />-->
			<Setter Property="AlternationCount" Value="2" />
		</Style>

		<Style x:Key="StyleDataHeaderGridClassement" TargetType="{x:Type DataGridColumnHeader}">
			<Setter Property="FontSize" Value="13"/>
			<Setter Property="Height" Value="16"/>
			<!--<Setter Property="Background" Value="{StaticResource backgroundColor}" />
			<Setter Property="Foreground" Value="{StaticResource color1}" />-->
		</Style>

		<Style x:Key="StyleDataCellGridClassement" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource {x:Type DataGridCell}}">
			<Setter Property="FontSize" Value="13"/>
			<Setter Property="FontStyle" Value="Italic"/>
			<Setter Property="Height" Value="18"/>
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="BorderBrush" Value="Transparent"/>
			<!--<Setter Property="Background" Value="{StaticResource backgroundColor}" />
			<Setter Property="Foreground" Value="{StaticResource color2}" /> -->
		</Style>

		<Style x:Key="StyleDataRowGridClassement" TargetType="{x:Type DataGridRow}">
			<Style.Triggers>
				<Trigger Property="ItemsControl.AlternationIndex" Value="0">
					<Setter Property="Background" Value="BlueViolet"/>
				</Trigger>
				<Trigger Property="ItemsControl.AlternationIndex" Value="1">
					<Setter Property="Background" Value="Gray"/>
				</Trigger>
			</Style.Triggers>
		</Style>

		<Style x:Key="MatchesDataGridTournamentName" TargetType="{x:Type TextBlock}">
			<Setter Property="Background" Value="{Binding Tournament, Converter={StaticResource DataGridTournamentColumnConverter}}"/>
			<Setter Property="Foreground" Value="AntiqueWhite"/>
		</Style>

		<Style x:Key="MatchesDataGridTeamName" TargetType="{x:Type TextBlock}">
			<Setter Property="HorizontalAlignment" Value="Center"/>
			<Setter Property="FontStyle" Value="Italic"/>
		</Style>

		<Style x:Key="MatchesDataGridScore" TargetType="{x:Type TextBlock}">
			<Setter Property="HorizontalAlignment" Value="Center"/>
			<Setter Property="Foreground" Value="LightGray"/>
		</Style>
		
	</Application.Resources>
</Application>
